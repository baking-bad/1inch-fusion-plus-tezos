{ parameter
    (or (pair %deploy_dst
           (bytes %order_hash)
           (bytes %hashlock)
           (address %maker)
           (address %taker)
           (or %token (or %fA (address %fA12) (pair %fA2 address nat)) (unit %tEZ))
           (nat %amount)
           (mutez %safety_deposit)
           (pair %timelocks
              (int %src_withdrawal)
              (int %src_public_withdrawal)
              (int %src_cancellation)
              (int %src_public_cancellation)
              (int %dst_withdrawal)
              (int %dst_public_withdrawal)
              (int %dst_cancellation)))
        (pair %deploy_src
           (pair %order
              (key %maker)
              (or %token (or %fA (address %fA12) (pair %fA2 address nat)) (unit %tEZ))
              (nat %amount)
              (bytes %order_hash)
              (bytes %hashlock))
           (signature %signature)
           (pair %partial_immutables
              (address %taker)
              (mutez %safety_deposit)
              (pair %timelocks
                 (int %src_withdrawal)
                 (int %src_public_withdrawal)
                 (int %src_cancellation)
                 (int %src_public_cancellation)
                 (int %dst_withdrawal)
                 (int %dst_public_withdrawal)
                 (int %dst_cancellation))))) ;
  storage
    (pair (set %hashlocks bytes) (set %allowed_operators address) (address %admin)) ;
  code { LAMBDA
           (pair int int int int int int int)
           (pair timestamp timestamp timestamp timestamp timestamp timestamp timestamp)
           { NOW ;
             DUP 2 ;
             GET 12 ;
             DUP 2 ;
             ADD ;
             DUP 3 ;
             GET 11 ;
             DUP 3 ;
             ADD ;
             DUP 4 ;
             GET 9 ;
             DUP 4 ;
             ADD ;
             DUP 5 ;
             GET 7 ;
             DUP 5 ;
             ADD ;
             DUP 6 ;
             GET 5 ;
             DUP 6 ;
             ADD ;
             DUP 7 ;
             GET 3 ;
             DUP 7 ;
             ADD ;
             DIG 7 ;
             CAR ;
             DIG 7 ;
             ADD ;
             PAIR 7 } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { DUP ;
             GET 9 ;
             IF_LEFT
               { DROP ; PUSH mutez 0 }
               { DROP ; PUSH mutez 1 ; DUP 2 ; GET 11 ; MUL } ;
             DUP 2 ;
             GET 13 ;
             ADD ;
             PUSH string "INVALID_TEZ_AMOUNT_IN_TRANSACTION" ;
             DUP 2 ;
             AMOUNT ;
             COMPARE ;
             EQ ;
             IF { DROP } { FAILWITH } ;
             DUP 2 ;
             GET 14 ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DUP 3 ;
             GET 13 ;
             DUP 4 ;
             GET 11 ;
             DUP 5 ;
             GET 9 ;
             DUP 6 ;
             GET 7 ;
             DUP 7 ;
             GET 5 ;
             DUP 8 ;
             GET 3 ;
             DUP 9 ;
             CAR ;
             PAIR 8 ;
             SWAP ;
             NONE key_hash ;
             CREATE_CONTRACT
               { parameter (or (bytes %withdraw) (or (bytes %publicWithdraw) (unit %cancel))) ;
                 storage
                   (pair (bytes %order_hash)
                         (bytes %hashlock)
                         (address %maker)
                         (address %taker)
                         (or %token (or %fA (address %fA12) (pair %fA2 address nat)) (unit %tEZ))
                         (nat %amount)
                         (mutez %safety_deposit)
                         (pair %timelocks
                            (timestamp %src_withdrawal)
                            (timestamp %src_public_withdrawal)
                            (timestamp %src_cancellation)
                            (timestamp %src_public_cancellation)
                            (timestamp %dst_withdrawal)
                            (timestamp %dst_public_withdrawal)
                            (timestamp %dst_cancellation))) ;
                 code { UNPAIR ;
                        PUSH string "TEZ_IN_TRANSACTION_DISALLOWED" ;
                        PUSH mutez 0 ;
                        AMOUNT ;
                        COMPARE ;
                        EQ ;
                        IF { DROP } { FAILWITH } ;
                        IF_LEFT
                          { DUP 2 ;
                            SWAP ;
                            DIG 2 ;
                            PUSH string "ONLY_TAKER" ;
                            DUP 2 ;
                            GET 7 ;
                            SENDER ;
                            COMPARE ;
                            EQ ;
                            IF { DROP } { FAILWITH } ;
                            NOW ;
                            DUP 2 ;
                            GET 14 ;
                            GET 9 ;
                            SWAP ;
                            COMPARE ;
                            GE ;
                            IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
                            NOW ;
                            DUP 2 ;
                            GET 14 ;
                            GET 12 ;
                            SWAP ;
                            COMPARE ;
                            LT ;
                            IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
                            SWAP ;
                            KECCAK ;
                            DUP 2 ;
                            GET 3 ;
                            SWAP ;
                            COMPARE ;
                            EQ ;
                            IF {} { PUSH string "INVALID_SECRET" ; FAILWITH } ;
                            NIL operation ;
                            DUP 2 ;
                            GET 13 ;
                            SENDER ;
                            CONTRACT unit ;
                            IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                            SWAP ;
                            UNIT ;
                            TRANSFER_TOKENS ;
                            CONS ;
                            DUP 2 ;
                            GET 11 ;
                            DUP 3 ;
                            GET 5 ;
                            SELF_ADDRESS ;
                            DIG 4 ;
                            GET 9 ;
                            IF_LEFT
                              { IF_LEFT
                                  { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                    IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                    PUSH mutez 0 ;
                                    DIG 4 ;
                                    DIG 4 ;
                                    DIG 4 ;
                                    PAIR 3 ;
                                    TRANSFER_TOKENS }
                                  { UNPAIR ;
                                    CONTRACT %transfer
                                      (list (pair (address %from) (list %txs (pair (address %to) (nat %token_id) (nat %amount))))) ;
                                    IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                    PUSH mutez 0 ;
                                    NIL (pair address (list (pair address nat nat))) ;
                                    NIL (pair address nat nat) ;
                                    DIG 7 ;
                                    DIG 5 ;
                                    DIG 7 ;
                                    PAIR 3 ;
                                    CONS ;
                                    DIG 4 ;
                                    PAIR ;
                                    CONS ;
                                    TRANSFER_TOKENS } }
                              { DROP 2 ;
                                PUSH mutez 1 ;
                                DIG 2 ;
                                MUL ;
                                SWAP ;
                                CONTRACT unit ;
                                IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                                SWAP ;
                                UNIT ;
                                TRANSFER_TOKENS } }
                          { IF_LEFT
                              { DUP 2 ;
                                SWAP ;
                                DIG 2 ;
                                NOW ;
                                DUP 2 ;
                                GET 14 ;
                                GET 11 ;
                                SWAP ;
                                COMPARE ;
                                GE ;
                                IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
                                NOW ;
                                DUP 2 ;
                                GET 14 ;
                                GET 12 ;
                                SWAP ;
                                COMPARE ;
                                LT ;
                                IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
                                SWAP ;
                                KECCAK ;
                                DUP 2 ;
                                GET 3 ;
                                SWAP ;
                                COMPARE ;
                                EQ ;
                                IF {} { PUSH string "INVALID_SECRET" ; FAILWITH } ;
                                NIL operation ;
                                DUP 2 ;
                                GET 13 ;
                                SENDER ;
                                CONTRACT unit ;
                                IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                                SWAP ;
                                UNIT ;
                                TRANSFER_TOKENS ;
                                CONS ;
                                DUP 2 ;
                                GET 11 ;
                                DUP 3 ;
                                GET 5 ;
                                SELF_ADDRESS ;
                                DIG 4 ;
                                GET 9 ;
                                IF_LEFT
                                  { IF_LEFT
                                      { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                        IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 4 ;
                                        DIG 4 ;
                                        DIG 4 ;
                                        PAIR 3 ;
                                        TRANSFER_TOKENS }
                                      { UNPAIR ;
                                        CONTRACT %transfer
                                          (list (pair (address %from) (list %txs (pair (address %to) (nat %token_id) (nat %amount))))) ;
                                        IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address nat nat))) ;
                                        NIL (pair address nat nat) ;
                                        DIG 7 ;
                                        DIG 5 ;
                                        DIG 7 ;
                                        PAIR 3 ;
                                        CONS ;
                                        DIG 4 ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS } }
                                  { DROP 2 ;
                                    PUSH mutez 1 ;
                                    DIG 2 ;
                                    MUL ;
                                    SWAP ;
                                    CONTRACT unit ;
                                    IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                                    SWAP ;
                                    UNIT ;
                                    TRANSFER_TOKENS } }
                              { DROP ;
                                DUP ;
                                PUSH string "ONLY_TAKER" ;
                                DUP 2 ;
                                GET 7 ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF { DROP } { FAILWITH } ;
                                NOW ;
                                DUP 2 ;
                                GET 14 ;
                                GET 12 ;
                                SWAP ;
                                COMPARE ;
                                GE ;
                                IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
                                NIL operation ;
                                DUP 2 ;
                                GET 13 ;
                                SENDER ;
                                CONTRACT unit ;
                                IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                                SWAP ;
                                UNIT ;
                                TRANSFER_TOKENS ;
                                CONS ;
                                DUP 2 ;
                                GET 11 ;
                                DUP 3 ;
                                GET 7 ;
                                SELF_ADDRESS ;
                                DIG 4 ;
                                GET 9 ;
                                IF_LEFT
                                  { IF_LEFT
                                      { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                        IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 4 ;
                                        DIG 4 ;
                                        DIG 4 ;
                                        PAIR 3 ;
                                        TRANSFER_TOKENS }
                                      { UNPAIR ;
                                        CONTRACT %transfer
                                          (list (pair (address %from) (list %txs (pair (address %to) (nat %token_id) (nat %amount))))) ;
                                        IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address nat nat))) ;
                                        NIL (pair address nat nat) ;
                                        DIG 7 ;
                                        DIG 5 ;
                                        DIG 7 ;
                                        PAIR 3 ;
                                        CONS ;
                                        DIG 4 ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS } }
                                  { DROP 2 ;
                                    PUSH mutez 1 ;
                                    DIG 2 ;
                                    MUL ;
                                    SWAP ;
                                    CONTRACT unit ;
                                    IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                                    SWAP ;
                                    UNIT ;
                                    TRANSFER_TOKENS } } } ;
                        CONS ;
                        PAIR } } ;
             DUP 3 ;
             GET 9 ;
             IF_LEFT
               { NIL operation ;
                 DUP 5 ;
                 GET 11 ;
                 DIG 5 ;
                 GET 7 ;
                 DIG 3 ;
                 IF_LEFT
                   { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                     IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DIG 6 ;
                     DIG 4 ;
                     PAIR 3 ;
                     TRANSFER_TOKENS }
                   { UNPAIR ;
                     CONTRACT %transfer
                       (list (pair (address %from) (list %txs (pair (address %to) (nat %token_id) (nat %amount))))) ;
                     IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address nat nat))) ;
                     NIL (pair address nat nat) ;
                     DIG 6 ;
                     DIG 5 ;
                     DIG 9 ;
                     PAIR 3 ;
                     CONS ;
                     DIG 4 ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS } ;
                 CONS }
               { DIG 2 ; DIG 3 ; DROP 3 ; NIL operation } }
           { UNPAIR 3 ;
             DUP ;
             PACK ;
             PUSH string "INVALID_ORDER_SIGNATURE" ;
             SWAP ;
             DIG 3 ;
             DUP 4 ;
             CAR ;
             CHECK_SIGNATURE ;
             IF { DROP } { FAILWITH } ;
             PUSH string "INVALID_TEZ_AMOUNT_IN_TRANSACTION" ;
             DUP 3 ;
             GET 3 ;
             AMOUNT ;
             COMPARE ;
             EQ ;
             IF { DROP } { FAILWITH } ;
             DUP 2 ;
             GET 4 ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DUP 3 ;
             GET 3 ;
             DUP 3 ;
             GET 5 ;
             DUP 4 ;
             GET 3 ;
             DUP 6 ;
             CAR ;
             DUP 6 ;
             CAR ;
             HASH_KEY ;
             IMPLICIT_ACCOUNT ;
             ADDRESS ;
             DUP 7 ;
             GET 8 ;
             DIG 7 ;
             GET 7 ;
             PAIR 8 ;
             DUP ;
             DIG 2 ;
             GET 3 ;
             NONE key_hash ;
             CREATE_CONTRACT
               { parameter
                   (or (bytes %withdraw)
                       (or (pair %withdrawTo (bytes %secret) (address %target))
                           (or (bytes %publicWithdraw) (or (unit %cancel) (unit %publicCancel))))) ;
                 storage
                   (pair (bytes %order_hash)
                         (bytes %hashlock)
                         (address %maker)
                         (address %taker)
                         (or %token (or %fA (address %fA12) (pair %fA2 address nat)) (unit %tEZ))
                         (nat %amount)
                         (mutez %safety_deposit)
                         (pair %timelocks
                            (timestamp %src_withdrawal)
                            (timestamp %src_public_withdrawal)
                            (timestamp %src_cancellation)
                            (timestamp %src_public_cancellation)
                            (timestamp %dst_withdrawal)
                            (timestamp %dst_public_withdrawal)
                            (timestamp %dst_cancellation))) ;
                 code { UNPAIR ;
                        PUSH string "TEZ_IN_TRANSACTION_DISALLOWED" ;
                        PUSH mutez 0 ;
                        AMOUNT ;
                        COMPARE ;
                        EQ ;
                        IF { DROP } { FAILWITH } ;
                        IF_LEFT
                          { DUP 2 ;
                            SWAP ;
                            DIG 2 ;
                            PUSH string "ONLY_TAKER" ;
                            DUP 2 ;
                            GET 7 ;
                            SENDER ;
                            COMPARE ;
                            EQ ;
                            IF { DROP } { FAILWITH } ;
                            NOW ;
                            DUP 2 ;
                            GET 14 ;
                            CAR ;
                            SWAP ;
                            COMPARE ;
                            GE ;
                            IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
                            NOW ;
                            DUP 2 ;
                            GET 14 ;
                            GET 5 ;
                            SWAP ;
                            COMPARE ;
                            LT ;
                            IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
                            SENDER ;
                            DIG 2 ;
                            KECCAK ;
                            DUP 3 ;
                            GET 3 ;
                            SWAP ;
                            COMPARE ;
                            EQ ;
                            IF {} { PUSH string "INVALID_SECRET" ; FAILWITH } ;
                            NIL operation ;
                            DUP 3 ;
                            GET 13 ;
                            SENDER ;
                            CONTRACT unit ;
                            IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                            SWAP ;
                            UNIT ;
                            TRANSFER_TOKENS ;
                            CONS ;
                            DUP 3 ;
                            GET 11 ;
                            DIG 2 ;
                            SELF_ADDRESS ;
                            DIG 4 ;
                            GET 9 ;
                            IF_LEFT
                              { IF_LEFT
                                  { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                    IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                    PUSH mutez 0 ;
                                    DIG 4 ;
                                    DIG 4 ;
                                    DIG 4 ;
                                    PAIR 3 ;
                                    TRANSFER_TOKENS }
                                  { UNPAIR ;
                                    CONTRACT %transfer
                                      (list (pair (address %from) (list %txs (pair (address %to) (nat %token_id) (nat %amount))))) ;
                                    IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                    PUSH mutez 0 ;
                                    NIL (pair address (list (pair address nat nat))) ;
                                    NIL (pair address nat nat) ;
                                    DIG 7 ;
                                    DIG 5 ;
                                    DIG 7 ;
                                    PAIR 3 ;
                                    CONS ;
                                    DIG 4 ;
                                    PAIR ;
                                    CONS ;
                                    TRANSFER_TOKENS } }
                              { DROP 2 ;
                                PUSH mutez 1 ;
                                DIG 2 ;
                                MUL ;
                                SWAP ;
                                CONTRACT unit ;
                                IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                                SWAP ;
                                UNIT ;
                                TRANSFER_TOKENS } }
                          { IF_LEFT
                              { DUP 2 ;
                                SWAP ;
                                UNPAIR ;
                                DIG 3 ;
                                PUSH string "ONLY_TAKER" ;
                                DUP 2 ;
                                GET 7 ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF { DROP } { FAILWITH } ;
                                NOW ;
                                DUP 2 ;
                                GET 14 ;
                                CAR ;
                                SWAP ;
                                COMPARE ;
                                GE ;
                                IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
                                NOW ;
                                DUP 2 ;
                                GET 14 ;
                                GET 5 ;
                                SWAP ;
                                COMPARE ;
                                LT ;
                                IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
                                SWAP ;
                                KECCAK ;
                                DUP 2 ;
                                GET 3 ;
                                SWAP ;
                                COMPARE ;
                                EQ ;
                                IF {} { PUSH string "INVALID_SECRET" ; FAILWITH } ;
                                NIL operation ;
                                DUP 2 ;
                                GET 13 ;
                                SENDER ;
                                CONTRACT unit ;
                                IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                                SWAP ;
                                UNIT ;
                                TRANSFER_TOKENS ;
                                CONS ;
                                DUP 2 ;
                                GET 11 ;
                                DIG 3 ;
                                SELF_ADDRESS ;
                                DIG 4 ;
                                GET 9 ;
                                IF_LEFT
                                  { IF_LEFT
                                      { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                        IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 4 ;
                                        DIG 4 ;
                                        DIG 4 ;
                                        PAIR 3 ;
                                        TRANSFER_TOKENS }
                                      { UNPAIR ;
                                        CONTRACT %transfer
                                          (list (pair (address %from) (list %txs (pair (address %to) (nat %token_id) (nat %amount))))) ;
                                        IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address nat nat))) ;
                                        NIL (pair address nat nat) ;
                                        DIG 7 ;
                                        DIG 5 ;
                                        DIG 7 ;
                                        PAIR 3 ;
                                        CONS ;
                                        DIG 4 ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS } }
                                  { DROP 2 ;
                                    PUSH mutez 1 ;
                                    DIG 2 ;
                                    MUL ;
                                    SWAP ;
                                    CONTRACT unit ;
                                    IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                                    SWAP ;
                                    UNIT ;
                                    TRANSFER_TOKENS } }
                              { IF_LEFT
                                  { DUP 2 ;
                                    SWAP ;
                                    DIG 2 ;
                                    NOW ;
                                    DUP 2 ;
                                    GET 14 ;
                                    GET 3 ;
                                    SWAP ;
                                    COMPARE ;
                                    GE ;
                                    IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
                                    NOW ;
                                    DUP 2 ;
                                    GET 14 ;
                                    GET 5 ;
                                    SWAP ;
                                    COMPARE ;
                                    LT ;
                                    IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
                                    SWAP ;
                                    KECCAK ;
                                    DUP 2 ;
                                    GET 3 ;
                                    SWAP ;
                                    COMPARE ;
                                    EQ ;
                                    IF {} { PUSH string "INVALID_SECRET" ; FAILWITH } ;
                                    NIL operation ;
                                    DUP 2 ;
                                    GET 13 ;
                                    SENDER ;
                                    CONTRACT unit ;
                                    IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                                    SWAP ;
                                    UNIT ;
                                    TRANSFER_TOKENS ;
                                    CONS ;
                                    DUP 2 ;
                                    GET 11 ;
                                    DUP 3 ;
                                    GET 7 ;
                                    SELF_ADDRESS ;
                                    DIG 4 ;
                                    GET 9 ;
                                    IF_LEFT
                                      { IF_LEFT
                                          { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                            IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                            PUSH mutez 0 ;
                                            DIG 4 ;
                                            DIG 4 ;
                                            DIG 4 ;
                                            PAIR 3 ;
                                            TRANSFER_TOKENS }
                                          { UNPAIR ;
                                            CONTRACT %transfer
                                              (list (pair (address %from) (list %txs (pair (address %to) (nat %token_id) (nat %amount))))) ;
                                            IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                            PUSH mutez 0 ;
                                            NIL (pair address (list (pair address nat nat))) ;
                                            NIL (pair address nat nat) ;
                                            DIG 7 ;
                                            DIG 5 ;
                                            DIG 7 ;
                                            PAIR 3 ;
                                            CONS ;
                                            DIG 4 ;
                                            PAIR ;
                                            CONS ;
                                            TRANSFER_TOKENS } }
                                      { DROP 2 ;
                                        PUSH mutez 1 ;
                                        DIG 2 ;
                                        MUL ;
                                        SWAP ;
                                        CONTRACT unit ;
                                        IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                                        SWAP ;
                                        UNIT ;
                                        TRANSFER_TOKENS } }
                                  { IF_LEFT
                                      { DROP ;
                                        DUP ;
                                        PUSH string "ONLY_TAKER" ;
                                        DUP 2 ;
                                        GET 7 ;
                                        SENDER ;
                                        COMPARE ;
                                        EQ ;
                                        IF { DROP } { FAILWITH } ;
                                        NOW ;
                                        DUP 2 ;
                                        GET 14 ;
                                        GET 5 ;
                                        SWAP ;
                                        COMPARE ;
                                        GE ;
                                        IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
                                        NIL operation ;
                                        DUP 2 ;
                                        GET 13 ;
                                        SENDER ;
                                        CONTRACT unit ;
                                        IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                                        SWAP ;
                                        UNIT ;
                                        TRANSFER_TOKENS ;
                                        CONS ;
                                        DUP 2 ;
                                        GET 11 ;
                                        DUP 3 ;
                                        GET 5 ;
                                        SELF_ADDRESS ;
                                        DIG 4 ;
                                        GET 9 ;
                                        IF_LEFT
                                          { IF_LEFT
                                              { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                                PUSH mutez 0 ;
                                                DIG 4 ;
                                                DIG 4 ;
                                                DIG 4 ;
                                                PAIR 3 ;
                                                TRANSFER_TOKENS }
                                              { UNPAIR ;
                                                CONTRACT %transfer
                                                  (list (pair (address %from) (list %txs (pair (address %to) (nat %token_id) (nat %amount))))) ;
                                                IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                                PUSH mutez 0 ;
                                                NIL (pair address (list (pair address nat nat))) ;
                                                NIL (pair address nat nat) ;
                                                DIG 7 ;
                                                DIG 5 ;
                                                DIG 7 ;
                                                PAIR 3 ;
                                                CONS ;
                                                DIG 4 ;
                                                PAIR ;
                                                CONS ;
                                                TRANSFER_TOKENS } }
                                          { DROP 2 ;
                                            PUSH mutez 1 ;
                                            DIG 2 ;
                                            MUL ;
                                            SWAP ;
                                            CONTRACT unit ;
                                            IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                                            SWAP ;
                                            UNIT ;
                                            TRANSFER_TOKENS } }
                                      { DROP ;
                                        DUP ;
                                        NOW ;
                                        DUP 2 ;
                                        GET 14 ;
                                        GET 7 ;
                                        SWAP ;
                                        COMPARE ;
                                        GE ;
                                        IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
                                        NIL operation ;
                                        DUP 2 ;
                                        GET 13 ;
                                        SENDER ;
                                        CONTRACT unit ;
                                        IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                                        SWAP ;
                                        UNIT ;
                                        TRANSFER_TOKENS ;
                                        CONS ;
                                        DUP 2 ;
                                        GET 11 ;
                                        DUP 3 ;
                                        GET 5 ;
                                        SELF_ADDRESS ;
                                        DIG 4 ;
                                        GET 9 ;
                                        IF_LEFT
                                          { IF_LEFT
                                              { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                                PUSH mutez 0 ;
                                                DIG 4 ;
                                                DIG 4 ;
                                                DIG 4 ;
                                                PAIR 3 ;
                                                TRANSFER_TOKENS }
                                              { UNPAIR ;
                                                CONTRACT %transfer
                                                  (list (pair (address %from) (list %txs (pair (address %to) (nat %token_id) (nat %amount))))) ;
                                                IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                                                PUSH mutez 0 ;
                                                NIL (pair address (list (pair address nat nat))) ;
                                                NIL (pair address nat nat) ;
                                                DIG 7 ;
                                                DIG 5 ;
                                                DIG 7 ;
                                                PAIR 3 ;
                                                CONS ;
                                                DIG 4 ;
                                                PAIR ;
                                                CONS ;
                                                TRANSFER_TOKENS } }
                                          { DROP 2 ;
                                            PUSH mutez 1 ;
                                            DIG 2 ;
                                            MUL ;
                                            SWAP ;
                                            CONTRACT unit ;
                                            IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                                            SWAP ;
                                            UNIT ;
                                            TRANSFER_TOKENS } } } } } ;
                        CONS ;
                        PAIR } } ;
             NIL operation ;
             DUP 4 ;
             GET 9 ;
             IF_LEFT
               { DUP 5 ;
                 GET 11 ;
                 DIG 5 ;
                 GET 5 ;
                 DIG 2 ;
                 IF_LEFT
                   { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                     IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DIG 6 ;
                     DIG 4 ;
                     PAIR 3 ;
                     TRANSFER_TOKENS }
                   { UNPAIR ;
                     CONTRACT %transfer
                       (list (pair (address %from) (list %txs (pair (address %to) (nat %token_id) (nat %amount))))) ;
                     IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address nat nat))) ;
                     NIL (pair address nat nat) ;
                     DIG 6 ;
                     DIG 5 ;
                     DIG 9 ;
                     PAIR 3 ;
                     CONS ;
                     DIG 4 ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS } }
               { DIG 3 ; DIG 4 ; DROP 3 ; PUSH string "INVALID_TOKEN_TYPE" ; FAILWITH } ;
             CONS } ;
         SWAP ;
         CONS ;
         PAIR } }

